name: Upload latest release

on:
  push:
    tags:
      - "v*"
    tags-ignore:
      - "v*-rc*"

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v1
      with:
        python-version: "3.x"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install setuptools wheel twine
    - name: Build dists
      run: |
        python setup.py sdist bdist_wheel
    - name: Draft GitHub release
      id: create_release
      uses: actions/create-release@latest
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: true
    - name: Prep for asset upload
      run: |
        cp dist/aws_consoler-*-py2.py3-none-any.whl release.whl
        cp dist/aws_consoler-*.tar.gz release.tgz
    - name: Attach tgz to GitHub release
      uses: actions/upload-release-asset@latest
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: release.tgz
        asset_name: release.tgz
        asset_content_type: application/x-gtar
    - name: Attach whl to GitHub release
      uses: actions/upload-release-asset@latest
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: release.whl
        asset_name: release.whl
        asset_content_type: application/x-wheel+zip
    - name: Upload to PyPI
      env:
        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
        twine upload dist/*
